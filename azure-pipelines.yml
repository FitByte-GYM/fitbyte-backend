# ==========================================
# FitByte Backend Pipeline (C# - .NET 8)
# ==========================================

trigger:
  branches:
    include:
      - develop
      - feature/membresia
      - feature/asistencia

pool:
  name: FitByteLocalPool


variables:
  buildConfiguration: 'Release'

steps:
  # 1️⃣ Clonar el código desde GitHub
  - checkout: self

  # 2️⃣ Instalar SDK de .NET 8
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.0.x'
    displayName: 'Instalar .NET 8 SDK'

  # 3️⃣ Restaurar dependencias
  - script: dotnet restore Gym_FitByte/Gym_FitByte.csproj
    displayName: 'Restaurar dependencias'

  # 4️⃣ Compilar el proyecto
  - script: dotnet build Gym_FitByte/Gym_FitByte.csproj --configuration $(buildConfiguration)
    displayName: 'Compilar FitByte Backend'

  # 5️⃣ Ejecutar pruebas (si tienes)
  - script: dotnet test --no-build --verbosity normal
    displayName: 'Ejecutar pruebas automáticas'

  # 6️⃣ Publicar artefactos (compilación)
  - script: dotnet publish Gym_FitByte/Gym_FitByte.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish
    displayName: 'Publicar artefacto compilado'

  # 7️⃣ Guardar artefactos en Azure DevOps
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/publish'
      artifactName: 'drop'
    displayName: 'Guardar artefactos en DevOps'

  # 8️⃣ Desplegar en Azure App Service (cuando esté configurado)
  - task: AzureWebApp@1
    inputs:
      azureSubscription: 'ConexionAzureFitByte'
      appName: 'fitbyte-backend-api'
      package: '$(Build.ArtifactStagingDirectory)/publish'
    displayName: 'Desplegar FitByte Backend a Azure'
